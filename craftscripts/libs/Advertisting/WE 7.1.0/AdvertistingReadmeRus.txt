Это небольшая библиотека для вставки вашей рекламы в ваш скрипт.

Установка: описана в корне папки с библиотеками (с помощью модуля include).

Как пользоваться:

Создали объект для работы библиотеки.

advfactory = new Advertisting();

Установили имя файла для хранения конфигурации. Если этого не сделать,
то файл будет по умолчанию, и тогда могут быть конфликты с другими
скриптами, использующими эту библиотеку.

advfactory.setNameInfoFile("UltraCommandBlock.info"); //По умолчанию AdvInfoFile.info

Установили имя папки, где будет храниться файл конфигурации.

advfactory.setNameInfoFolder("craftscripts"); //По умолчанию craftscripts

Установили время в секундах, через которое будет показываться реклама.
Реклама будет показываться при вызове скрипта если прошло время с показа
рекламы большее, чем установлено этой функцией.

advfactory.setNumbSecBetweenAdv(60*60*24); //По умолчанию 60*60, то есть один час. Здесь показан пример раз в сутки.

Установили рекламное объявление. Ниже пример установки многострочного
рекламного объявления.

advfactory.setAdvStr("\
-----------------------\n\
You are using script UltraCommandBlock by Harch,Square Team's member.\n\
Youtube channel: http://www.youtube.com/squareteamchannel\n\
Site: http://st.minecraft-moscow.com\n\
-----------------------\n\
");

Эту функцию надо ставить в том месте, где она обязательно будет вызвана
при вызове скрипта. Рекомендуется сделать отдельно функцию с кодом вашего
скрипта, а потом вызывать её и эту функцию. В этой функции идёт обработка
шага показа рекламы (проверяется время, выводится объвление, если нужно,
и обновляется параметр времени).

advfactory.advStep();

Так как библиотека использует свой набор команд игрока для получения информации о ней,
разработчику дана возможность получать информацию о том, была ли введена команда
библиотеки (к примеру, чтобы не выводить "неизвестный параметр", если она была введена).

Первый вариант:

if(advfactory.advStep() > 0) mainThread(); //Здесь мы разрешили вызов нашего скрипта при вводе команд "/?", "/help" и "help"

Второй вариант:

Весь код вашего скрипта вы пишите в функцию (к примеру, mainThread()), которая возвращает (к примеру)
число -1, если ваш скрипт не смог обработать введённый параметр.
Тогда код будет следующим:

q = mainThread();

if(q == -1 && !advfactory.isCommandAdv(argv[1])) player.print("Unknown type.");

advfactory.advStep();

----------------------------------------------------------------------------------------------------------------

Дополнительно (API):

При необходимости можно вызывать эту функцию для полного
обнуления статистики времени:

advfactory.createNewInfo();

Для восстановления всех команд библиотеки по умолчанию:

advfactory.setDefaultCommands();

Следующая команда проверяет, является ли введённая строка командой библиотеки.
Если да, то возвращает true, иначе возвращает false.

advfactory.isCommandAdv(cmd);

Вывести игроку информацию о библиотеке:

advfactory.getAbout();

Вывести игроку информацию об изменениях в этой версии библиотеки:

advfactory.getChanges();

Вывести игроку установленное рекламное объявление:

advfactory.getAdvertising();

Вывести игроку информацию о наличии команд в библиотеке:

advfactory.getInformationForScriptUsers();

Вывести игроку справку по командам библиотеки исходя из аргументов скрипта
(возвращает -1, если ничего не было выведено,
возвращает 0, если было выведено что-либо на команды "/?", "/help", "help",
возвращает 1, если было выведено что-то ещё). Данная функция может использоваться
для интеграции библиотеки в ваш скрипт.

advfactory.getHelp();

Функция обработки цикла библиотеки. Возвращает -2 в случае ошибки,
иначе возвращает результат отработки функции getHelp().

advfactory.advStep();

Поменять команду библиотеки на вызов справки (по умолчанию ):

advfactory.setAdvLibraryHelpCommand(cmd);

Поменять команду библиотеки на вызов "о библиотеке" (по умолчанию /advlibraryabout):

advfactory.setAdvLibraryAboutCommand(cmd)

Поменять команду библиотеки на вызов списка изменений в этой версии библиотеки (по умолчанию /advlibrarychanges):

advfactory.AdvLibraryChangesCommand(cmd);

Установка имени файла для хранения конфигурации. Если этого не сделать,
то файл будет по умолчанию, и тогда могут быть конфликты с другими
скриптами, использующими эту библиотеку. По умолчанию AdvInfoFile.info.

advfactory.setNameInfoFile("UltraCommandBlock.info");

Установка имени папки, где будет храниться файл конфигурации. По умолчанию craftscripts.

advfactory.setNameInfoFolder("craftscripts");

Установка времени в секундах, через которое будет показываться реклама.
Реклама будет показываться при вызове скрипта если прошло время с показа
рекламы большее, чем установлено этой функцией. По умолчанию 60*60, то есть раз в час.

advfactory.setNumbSecBetweenAdv(numbofsec);

Установка текст рекламного объявления.

advfactory.setAdvStr(text);